<!DOCTYPE html>
<html>
  <head>
    <title>OpenLayers Map</title>
    <style>
      #map {
        width: 100%;
        height:400px;
      }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/ol@v8.1.0/dist/ol.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ol@v8.1.0/ol.css">
  </head>
  <body>
    <div id="map"></div>
    <script>
var map = new ol.Map({
  target: 'map',
  layers: [
    new ol.layer.Tile({
      source: new ol.source.OSM()
    })
  ],
  view: new ol.View({
    center: ol.proj.fromLonLat([37.41, 8.82]),
    zoom: 4
  })
});

// Создаем источник для маркеров
var source = new ol.source.Vector();

// Создаем новые маркеры
var marker = new ol.Feature(
  new ol.geom.Point(
    ol.proj.fromLonLat([37.618423, 55.751244]) // Координаты Москвы
  )
);
// Устанавливаем изображение и название для маркера
marker.set('image', './img/mark.png');
marker.set('name', 'Название заведения 1');
source.addFeature(marker);

var marker1 = new ol.Feature(
  new ol.geom.Point(
    ol.proj.fromLonLat([37.617635, 55.755814]) // Координаты Красной площади
  )
);
// Устанавливаем изображение и название для маркера
marker1.set('image', './img/mark.png');
marker1.set('name', 'Название заведения 2');
source.addFeature(marker1);

var marker2 = new ol.Feature(
  new ol.geom.Point(
    ol.proj.fromLonLat([37.603298, 55.751574]) // Координаты Пушкинской площади
  )
);
marker2.set('image', './img/mark.png');
marker2.set('name', 'Название заведения 3');
source.addFeature(marker2);

var marker3 = new ol.Feature(
  new ol.geom.Point(
    ol.proj.fromLonLat([37.620092, 55.753215]) // Координаты Театральной площади
  )
);
marker3.set('image', './img/mark.png');
marker3.set('name', 'Название заведения 4');
source.addFeature(marker3);

var marker4 = new ol.Feature(
  new ol.geom.Point(
    ol.proj.fromLonLat([37.623161, 55.759450]) // Координаты Лубянской площади
  )
);
marker4.set('image', './img/mark.png');
marker4.set('name', 'Название заведения 5');
source.addFeature(marker4);

// Создаем источник для кластеров, используя источник маркеров
var clusterSource = new ol.source.Cluster({
  distance: 40, // Расстояние в пикселях для группировки маркеров
  source: source
});

// Создаем слой для кластеров
var clusters = new ol.layer.Vector({
  source: clusterSource,
  style: function(feature) {
    var size = feature.get('features').length;
    var style;
    if (size > 1) {
      // Если это кластер, отображаем его как круг с числом
      style = new ol.style.Style({
        image: new ol.style.Circle({
          radius: 10,
          stroke: new ol.style.Stroke({
            color: '#fff'
          }),
          fill: new ol.style.Fill({
            color: '#3399CC'
          })
        }),
        text: new ol.style.Text({
          text: size.toString(),
          fill: new ol.style.Fill({
            color: '#fff'
          })
        })
      });
    } else {
      // Если это отдельный маркер, отображаем его как иконку с названием
      var originalFeature = feature.get('features')[0];
      style = new ol.style.Style({
        image: new ol.style.Icon({
          anchor: [0.5, 1],
          src: originalFeature.get('image')
        }),
        text: new ol.style.Text({
          text: originalFeature.get('name'),
          offsetY: -25,
          fill: new ol.style.Fill({
            color: '#000'
          }),
          stroke: new ol.style.Stroke({
            color: '#fff',
            width: 3
          })
        })
      });
    }
    return style;
  }
});

// Добавляем слой на карту
map.addLayer(clusters);







map.on('click', function(evt) {
  map.forEachFeatureAtPixel(evt.pixel, function(feature, layer) {
    // Проверяем, является ли объект кластером
    var size = feature.get('features').length;
    if (size === 1) {
      // Если это отдельный маркер, получаем его данные
      var originalFeature = feature.get('features')[0];
      var image = originalFeature.get('image');
      var name = originalFeature.get('name');
      console.log('Вы кликнули на маркер с изображением: ' + image + ' и названием: ' + name);
    }
  });
});




    </script>
  </body>
</html>